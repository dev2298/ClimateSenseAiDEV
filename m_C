        public int SaveRelationshipStatus(int clientId)
        {
            int id = 0;
            Database db = CommonDAL.CreateCommonDatabase();
            IDbConnection connection = new SqlConnection(db.ConnectionString);
            param = new Dictionary<string, object>();
            param.Add("InsertIntoRelationshipStatus.clientId", clientId);
            sqlLogger.Info.Write("Start IndirectRelationshipStatus insertion", param);
            try
            {
                StringBuilder query = new StringBuilder();

                query.Append(" Insert into IndirectEntityRelationshipStatus(ClientID, Status, VersionDate, VersionSource) ");
                query.Append(" values(" + clientId + ",0,'" + System.DateTime.Now + "','rabbitMQ: Process Entity') ");
                query.Append(" SELECT CAST(SCOPE_IDENTITY() as int) AutoGenID ");
                id = connection.Query<int>(query.ToString()).Single();

                sqlLogger.Info.Write("End IndirectRelationshipStatus insertion", param);
                return id;

            }
            catch (Exception ex)
            {
                sqlLogger.Critical("Problem in EntityDAL.InsertIntoRelationshipStatus", param, ex);
                throw;

            }
        }


        public void UpdateRelationshipStatus(int autoGenID)
        {
            string connectionString = string.Empty;
            Database db = CommonDAL.CreateCommonDatabase();
            connectionString = db.ConnectionString;
            IDbConnection connection = new SqlConnection(connectionString);
            param = new Dictionary<string, object>();
            param.Add("InsertIntoRelationshipStatus.autoGenID", autoGenID);
            sqlLogger.Info.Write("Start IndirectRelationshipStatus updation", param);
            try
            {
                string query = " UPDATE IndirectEntityRelationshipStatus SET Status = 1 WHERE AutoGenID = " + autoGenID;
                connection.Query(query);
                sqlLogger.Info.Write("End IndirectRelationshipStatus updation", param);

            }
            catch (Exception ex)
            {
                sqlLogger.Critical("Problem in EntityDAL.UpdateRelationshipStatus", param, ex);
                throw;

            }
        }
